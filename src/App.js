import React, { useState, useEffect, useRef, memo } from 'react';
import { ChevronRight, Search, Upload, GitCompare, BarChart3, Check, ArrowRight, Zap, Shield, Clock, TrendingUp, Menu, X, PlayCircle, Sparkles, MessageSquare } from 'lucide-react';

// –í—ã–Ω–µ—Å–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –º–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
const DemoFormModal = memo(({ showDemoForm, setShowDemoForm }) => {
  const [formData, setFormData] = useState({
    name: '',
    company: '',
    email: '',
    phone: '',
    employees: '1-5',
    message: ''
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitStatus, setSubmitStatus] = useState(null);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsSubmitting(true);
    
    const TELEGRAM_BOT_TOKEN = '7981860487:AAEWXPGYxUPm-_kakYLABZtnHuVW3wUaI0Y';
    const TELEGRAM_CHAT_ID = '111748497';
    
    const message = `
üîî –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –¥–µ–º–æ!

üë§ –ò–º—è: ${formData.name}
üè¢ –ö–æ–º–ø–∞–Ω–∏—è: ${formData.company}
üìß Email: ${formData.email}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}
üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —é—Ä–∏—Å—Ç–æ–≤: ${formData.employees}
üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${formData.message || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}

‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}
`;

    try {
      const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          chat_id: TELEGRAM_CHAT_ID,
          text: message,
          parse_mode: 'HTML'
        })
      });

      if (response.ok) {
        setSubmitStatus('success');
        setFormData({
          name: '',
          company: '',
          email: '',
          phone: '',
          employees: '1-5',
          message: ''
        });
        setTimeout(() => {
          setShowDemoForm(false);
          setSubmitStatus(null);
        }, 3000);
      } else {
        setSubmitStatus('error');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
      setSubmitStatus('error');
    } finally {
      setIsSubmitting(false);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª—è —Ñ–æ—Ä–º—ã
  const handleInputChange = (field, value) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  if (!showDemoForm) return null;

  return (
    <div 
      className="fixed inset-0 z-50 overflow-y-auto" 
      onClick={(e) => {
        if (e.target === e.currentTarget) setShowDemoForm(false);
      }}
    >
      <div className="flex items-center justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0">
        <div className="fixed inset-0 transition-opacity bg-gray-900 bg-opacity-75" />

        <div className="inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-2xl relative">
          <div className="absolute top-4 right-4">
            <button
              onClick={() => setShowDemoForm(false)}
              className="text-gray-400 hover:text-gray-500"
              type="button"
            >
              <X className="w-6 h-6" />
            </button>
          </div>

          <h3 className="text-2xl font-bold text-gray-900 mb-2">
            –ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é
          </h3>
          <p className="text-gray-600 mb-6">
            –ü–æ–∫–∞–∂–µ–º, –∫–∞–∫ Athena —Ä–µ—à–∏—Ç –≤–∞—à–∏ –∑–∞–¥–∞—á–∏. –û—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.
          </p>

          {submitStatus === 'success' ? (
            <div className="text-center py-8">
              <div className="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <Check className="w-8 h-8 text-green-600" />
              </div>
              <h4 className="text-xl font-semibold text-gray-900 mb-2">–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!</h4>
              <p className="text-gray-600">–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è</p>
            </div>
          ) : (
            <form onSubmit={handleSubmit} className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –í–∞—à–µ –∏–º—è *
                </label>
                <input
                  type="text"
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  value={formData.name}
                  onChange={(e) => handleInputChange('name', e.target.value)}
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –ö–æ–º–ø–∞–Ω–∏—è *
                </label>
                <input
                  type="text"
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  value={formData.company}
                  onChange={(e) => handleInputChange('company', e.target.value)}
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  Email *
                </label>
                <input
                  type="email"
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  value={formData.email}
                  onChange={(e) => handleInputChange('email', e.target.value)}
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –¢–µ–ª–µ—Ñ–æ–Ω *
                </label>
                <input
                  type="tel"
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  value={formData.phone}
                  onChange={(e) => handleInputChange('phone', e.target.value)}
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —é—Ä–∏—Å—Ç–æ–≤ –≤ –∫–æ–º–ø–∞–Ω–∏–∏
                </label>
                <select
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  value={formData.employees}
                  onChange={(e) => handleInputChange('employees', e.target.value)}
                >
                  <option value="1-5">1-5</option>
                  <option value="6-20">6-20</option>
                  <option value="21-50">21-50</option>
                  <option value="50+">–ë–æ–ª–µ–µ 50</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
                </label>
                <textarea
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  rows={3}
                  value={formData.message}
                  onChange={(e) => handleInputChange('message', e.target.value)}
                  placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–∏—Ö –∑–∞–¥–∞—á–∞—Ö..."
                />
              </div>

              {submitStatus === 'error' && (
                <div className="text-red-600 text-sm">
                  –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É.
                </div>
              )}

              <button
                type="submit"
                disabled={isSubmitting}
                className={`w-full py-3 px-4 rounded-lg font-semibold transition-all duration-200 ${
                  isSubmitting 
                    ? 'bg-gray-300 cursor-not-allowed' 
                    : 'bg-gradient-to-r from-blue-600 to-purple-600 text-white hover:shadow-lg'
                }`}
              >
                {isSubmitting ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É'}
              </button>

              <p className="text-xs text-gray-500 text-center">
                –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
              </p>
            </form>
          )}
        </div>
      </div>
    </div>
  );
});

const DevPlusWebsite = () => {
  const [scrollY, setScrollY] = useState(0);
  const [activeDemo, setActiveDemo] = useState('search');
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [hoveredCard, setHoveredCard] = useState(null);
  const [showDemoForm, setShowDemoForm] = useState(false);
  
  useEffect(() => {
    const handleScroll = () => setScrollY(window.scrollY);
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  const navbarStyle = {
    transform: scrollY > 100 ? 'translateY(0)' : 'translateY(0)',
    backdropFilter: scrollY > 50 ? 'blur(20px)' : 'blur(0px)',
    background: scrollY > 50 ? 'rgba(255, 255, 255, 0.9)' : 'rgba(255, 255, 255, 0)',
    boxShadow: scrollY > 50 ? '0 10px 40px rgba(0, 0, 0, 0.1)' : 'none',
  };

const demos = {
  search: {
    icon: <Search className="w-6 h-6" />,
    title: "–£–º–Ω—ã–π –ø–æ–∏—Å–∫",
    description: "AI –ø–æ–Ω–∏–º–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∏ –Ω–∞—Ö–æ–¥–∏—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤–æ –≤—Å–µ—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö",
    features: ["–ü–æ–∏—Å–∫ –Ω–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —è–∑—ã–∫–µ", "–£—á–µ—Ç —Å–∏–Ω–æ–Ω–∏–º–æ–≤ –∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏–∏", "–†–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏"],
    color: "from-blue-500 to-purple-600",
    gif: "/demos/search.gif"
  },
  upload: {
    icon: <Upload className="w-6 h-6" />,
    title: "–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
    description: "–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª—ã –∏–ª–∏ —Ü–µ–ª—ã–µ –ø–∞–ø–∫–∏. –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é",
    features: ["–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤—Å–µ—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤", "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ OCR", "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã"],
    color: "from-green-500 to-teal-600",
    gif: "/demos/upload.gif"
  },
  compare: {
    icon: <MessageSquare className="w-6 h-6" />,
    title: "–ò–ò –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç",
    description: "–ü–æ–ª—É—á–∞–π—Ç–µ —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤",
    features: ["–û—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–π –±–∞–∑—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤", "–°—Å—ã–ª–∫–∏ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã", "–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤"],
    color: "from-orange-500 to-red-600",
    gif: "/demos/assistant.gif"
  },
  analytics: {
    icon: <BarChart3 className="w-6 h-6" />,
    title: "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞",
    description: "–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã –∏ —ç–∫–æ–Ω–æ–º–∏—é –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
    features: ["–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "–ß–∞—Å—Ç—ã–µ —Ç–µ–º—ã –∑–∞–ø—Ä–æ—Å–æ–≤", "–†–∞—Å—á–µ—Ç —ç–∫–æ–Ω–æ–º–∏–∏"],
    color: "from-purple-500 to-pink-600",
    gif: "/demos/analytics.gif"
  }
};

  return (
    <div className="min-h-screen bg-white overflow-x-hidden">
      {/* –ù–∞–≤–±–∞—Ä */}
      <nav className="fixed top-0 w-full z-50 transition-all duration-300" style={navbarStyle}>
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-20">
            <div className="flex items-center space-x-2">
              <div className="w-10 h-10 bg-gradient-to-br from-blue-600 to-purple-600 rounded-lg flex items-center justify-center">
                <Sparkles className="w-6 h-6 text-white" />
              </div>
              <span className="text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                Athena
              </span>
            </div>
            
            <div className="hidden md:flex items-center space-x-8">
              <a href="#features" className="text-gray-700 hover:text-blue-600 transition-colors">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</a>
              <a href="#pricing" className="text-gray-700 hover:text-blue-600 transition-colors">–¢–∞—Ä–∏—Ñ—ã</a>
              <a href="#demo" className="text-gray-700 hover:text-blue-600 transition-colors">–î–µ–º–æ</a>
              <button className="px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-full hover:shadow-xl transform hover:-translate-y-0.5 transition-all duration-200"
              onClick={() => setShowDemoForm(true)}>
                –ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ
              </button>
              <button 
                onClick={() => setShowDemoForm(true)}
                className="text-gray-700 hover:text-blue-600 transition-colors cursor-pointer"
              >
                –ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–µ–º–æ
              </button>
            </div>

            <button
              className="md:hidden"
              onClick={() => setIsMenuOpen(!isMenuOpen)}
            >
              {isMenuOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
            </button>
          </div>
        </div>
      </nav>

      {/* Hero —Å–µ–∫—Ü–∏—è */}
      <section className="relative min-h-screen flex items-center pt-20 bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50">
        {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω */}
        <div className="absolute inset-0 overflow-hidden">
          <div 
            className="absolute -top-40 -right-40 w-80 h-80 bg-purple-300 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob"
            style={{ transform: `translate(${scrollY * 0.1}px, ${scrollY * 0.1}px)` }}
          />
          <div 
            className="absolute -bottom-40 -left-40 w-80 h-80 bg-yellow-300 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-2000"
            style={{ transform: `translate(-${scrollY * 0.1}px, -${scrollY * 0.1}px)` }}
          />
          <div 
            className="absolute top-40 left-1/2 w-80 h-80 bg-pink-300 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-4000"
            style={{ transform: `translate(${scrollY * 0.05}px, ${scrollY * 0.15}px)` }}
          />
        </div>

        <div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid lg:grid-cols-2 gap-12 items-center">
            <div className="space-y-8">
              <div className="animate-fade-up opacity-0" style={{ animationDelay: '0ms' }}>
                <h1 className="text-5xl md:text-7xl font-bold leading-tight">
                  <span className="bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 bg-clip-text text-transparent">
                    AI-—é—Ä–∏—Å—Ç
                  </span>
                  <br />
                  <span className="text-gray-900">–Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è</span>
                </h1>
              </div>
              
              <div className="animate-fade-up opacity-0" style={{ animationDelay: '200ms' }}>
                <p className="text-xl text-gray-600 leading-relaxed">
                  –ù–∞—Ö–æ–¥–∏—Ç–µ –Ω—É–∂–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∑–∞ —Å–µ–∫—É–Ω–¥—ã, –∞ –Ω–µ —á–∞—Å—ã. 
                  –†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–æ–∏—Å–∫–∞ –ø–æ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π —Å AI.
                </p>
              </div>

              <div className="animate-fade-up opacity-0" style={{ animationDelay: '400ms' }}>
                <div className="flex flex-col sm:flex-row gap-4">
                  <button  className="group px-8 py-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-full hover:shadow-2xl transform hover:-translate-y-1 transition-all duration-200 flex items-center justify-center" onClick={() => setShowDemoForm(true)}>
                    –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ
                    <ArrowRight className="ml-2 w-5 h-5 group-hover:translate-x-1 transition-transform" />
                  </button>

              
                </div>
              </div>

         <div className="animate-fade-up opacity-0" style={{ animationDelay: '600ms' }}>
  <p className="text-sm text-gray-600">
    –ù–∞—á–Ω–∏—Ç–µ 14-–¥–Ω–µ–≤–Ω—ã–π –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å
  </p>
</div>
            </div>

            <div className="animate-fade-up opacity-0 relative" style={{ animationDelay: '800ms' }}>
              <div className="relative">
                <div className="absolute inset-0 bg-gradient-to-r from-blue-600 to-purple-600 rounded-3xl transform rotate-3 scale-105 opacity-20 blur-xl" />
                <div className="relative bg-white rounded-3xl shadow-2xl overflow-hidden">
                  <div className="bg-gray-100 p-4 flex items-center space-x-2">
                    <div className="w-3 h-3 bg-red-500 rounded-full" />
                    <div className="w-3 h-3 bg-yellow-500 rounded-full" />
                    <div className="w-3 h-3 bg-green-500 rounded-full" />
                  </div>
                  <div className="p-8">
                    <div className="bg-gray-50 rounded-lg p-4 mb-4">
                      <p className="text-gray-600 mb-2">–ü–æ–∏—Å–∫:</p>
                      <p className="text-lg">–°—Ä–æ–∫ –∏—Å–∫–æ–≤–æ–π –¥–∞–≤–Ω–æ—Å—Ç–∏ –ø–æ —Ç—Ä—É–¥–æ–≤—ã–º —Å–ø–æ—Ä–∞–º?</p>
                    </div>
                    <div className="space-y-3">
                      <div className="bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg p-4 border-l-4 border-blue-500">
                        <p className="font-semibold text-blue-900">–ù–∞–π–¥–µ–Ω–æ –≤ 3 –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö:</p>
                        <p className="text-sm mt-2">‚Ä¢ 1 –º–µ—Å—è—Ü - –¥–ª—è –æ–±–∂–∞–ª–æ–≤–∞–Ω–∏—è —É–≤–æ–ª—å–Ω–µ–Ω–∏—è</p>
                        <p className="text-sm">‚Ä¢ 3 –º–µ—Å—è—Ü–∞ - –¥–ª—è –≤–∑—ã—Å–∫–∞–Ω–∏—è –∑–∞—Ä–ø–ª–∞—Ç—ã</p>
                        <p className="text-sm">‚Ä¢ 1 –≥–æ–¥ - –ø–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º —Ç—Ä—É–¥–æ–≤—ã–º —Å–ø–æ—Ä–∞–º</p>
                      </div>
                      <div className="flex gap-2">
                        <div className="bg-gray-100 rounded px-3 py-1 text-sm">üìÑ –¢–ö –†–§ —Å—Ç. 392</div>
                        <div className="bg-gray-100 rounded px-3 py-1 text-sm">üìÑ –ü–æ—Å—Ç. –ü–ª–µ–Ω—É–º–∞ –í–° ‚Ññ2</div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* –ö–æ–º–ø–∞–Ω–∏–∏-–∫–ª–∏–µ–Ω—Ç—ã */}
      <section id="clients" className="py-20 bg-white">
   <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-8 items-center">
  {[
    '/logos/company1.png',
    '/logos/company2.png', 
    '/logos/company3.png',
    '/logos/company4.png',
    '/logos/company5.png',
    '/logos/company6.png'

  ].map((logo, i) => (
    <div key={i} className="animate-scale opacity-0" style={{ animationDelay: `${i * 100}ms` }}>
<div className="h-24 flex items-center justify-center hover:opacity-80 transition-opacity cursor-pointer">
  <img 
    src={logo} 
    alt={`–ö–ª–∏–µ–Ω—Ç ${i + 1}`}
    className="max-h-16 max-w-full object-contain filter grayscale hover:grayscale-0 transition-all"
  />
</div>
    </div>
  ))}
</div>
      </section>

      {/* –ü—Ä–æ–±–ª–µ–º—ã */}
      <section className="py-20 bg-gradient-to-b from-gray-50 to-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="animate-fade-up opacity-0" style={{ animationDelay: '0ms' }}>
            <h2 className="text-4xl font-bold text-center mb-12">–ó–Ω–∞–∫–æ–º—ã–µ –ø—Ä–æ–±–ª–µ–º—ã?</h2>
          </div>

          <div className="grid md:grid-cols-3 gap-8">
            {[
              {
                title: "–ß–∞—Å–∞–º–∏ –∏—â–µ—Ç–µ –Ω—É–∂–Ω—É—é —Å—Ç–∞—Ç—å—é",
                description: "–¢—Ä–∞—Ç–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞ –ø–æ–∏—Å–∫ –≤ –º–Ω–æ–≥–æ—Ç–æ–º–Ω—ã—Ö –∫–æ–¥–µ–∫—Å–∞—Ö –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è—é—â–µ–º—Å—è –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–µ",
                icon: <Clock className="w-8 h-8" />
              },
              {
                title: "–ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç–µ –≤–∞–∂–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è",
                description: "–°–ª–æ–∂–Ω–æ –æ—Ç—Å–ª–µ–¥–∏—Ç—å –≤—Å–µ –ø–æ–ø—Ä–∞–≤–∫–∏ –≤ –∑–∞–∫–æ–Ω–∞—Ö –∏ –Ω–æ–≤—ã–µ —Å—É–¥–µ–±–Ω—ã–µ –ø—Ä–µ—Ü–µ–¥–µ–Ω—Ç—ã",
                icon: <TrendingUp className="w-8 h-8" />
              },
              {
                title: "–†—É—Ç–∏–Ω–Ω—ã–π –ø–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
                description: "–û–¥–Ω–∏ –∏ —Ç–µ –∂–µ –∑–∞–ø—Ä–æ—Å—ã –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –∏—Å–∫–∞—Ç—å —Å–Ω–æ–≤–∞ –∏ —Å–Ω–æ–≤–∞ –≤ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö",
                icon: <Search className="w-8 h-8" />
              }
            ].map((problem, i) => (
              <div key={i} className="animate-fade-up opacity-0" style={{ animationDelay: `${i * 200}ms` }}>
                <div 
                  className="relative p-8 rounded-2xl bg-white border border-gray-200 hover:border-red-300 hover:shadow-xl transition-all duration-300 cursor-pointer"
                  onMouseEnter={() => setHoveredCard(i)}
                  onMouseLeave={() => setHoveredCard(null)}
                >
                  <div className={`absolute -top-4 -right-4 w-16 h-16 rounded-full flex items-center justify-center transition-all duration-300 ${
                    hoveredCard === i ? 'bg-red-500 scale-110' : 'bg-red-100'
                  }`}>
                    <X className={`w-8 h-8 ${hoveredCard === i ? 'text-white' : 'text-red-500'}`} />
                  </div>
                  <div className="text-gray-400 mb-4">{problem.icon}</div>
                  <h3 className="text-xl font-semibold mb-3">{problem.title}</h3>
                  <p className="text-gray-600">{problem.description}</p>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π */}
      <section id="features" className="py-20 bg-gradient-to-b from-white to-gray-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="animate-fade-up opacity-0" style={{ animationDelay: '0ms' }}>
            <h2 className="text-4xl font-bold text-center mb-12">–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç</h2>
          </div>

          <div className="animate-fade-up opacity-0" style={{ animationDelay: '200ms' }}>
            <div className="flex flex-wrap justify-center gap-4 mb-12">
              {Object.entries(demos).map(([key, demo]) => (
                <button
                  key={key}
                  onClick={() => setActiveDemo(key)}
                  className={`px-6 py-3 rounded-full transition-all duration-300 flex items-center space-x-2 ${
                    activeDemo === key
                      ? 'bg-gradient-to-r ' + demo.color + ' text-white shadow-lg transform scale-105'
                      : 'bg-white border border-gray-300 hover:border-gray-400'
                  }`}
                >
                  {demo.icon}
                  <span>{demo.title}</span>
                </button>
              ))}
            </div>
          </div>

          <div className="animate-fade-up opacity-0" style={{ animationDelay: '400ms' }}>
            <div className="grid lg:grid-cols-2 gap-12 items-center">
              <div className="space-y-6">
                <h3 className="text-3xl font-bold">{demos[activeDemo].title}</h3>
                <p className="text-xl text-gray-600">{demos[activeDemo].description}</p>
                <ul className="space-y-3">
                  {demos[activeDemo].features.map((feature, i) => (
                    <li key={i} className="flex items-start space-x-3">
                      <Check className="w-6 h-6 text-green-500 flex-shrink-0 mt-0.5" />
                      <span className="text-gray-700">{feature}</span>
                    </li>
                  ))}
                </ul>
           
              </div>
              
      <div className="relative rounded-2xl overflow-hidden shadow-2xl bg-gray-100">
  {demos[activeDemo].gif ? (
    <img 
      src={demos[activeDemo].gif} 
      alt={`–î–µ–º–æ: ${demos[activeDemo].title}`}
      className="w-full h-auto object-cover"
    />
  ) : (
    <div className={`aspect-video flex items-center justify-center text-white bg-gradient-to-br ${demos[activeDemo].color}`}>
      <div className="text-center">
        <PlayCircle className="w-20 h-20 mx-auto mb-4" />
        <p className="text-xl">[–î–µ–º–æ: {demos[activeDemo].title}]</p>
      </div>
    </div>
  )}
</div>
            </div>
          </div>
        </div>
      </section>

      {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
      <section className="py-20 bg-gradient-to-br from-blue-600 to-purple-600 text-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="animate-fade-up opacity-0" style={{ animationDelay: '0ms' }}>
            <h2 className="text-4xl font-bold text-center mb-12">–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞</h2>
          </div>

          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
            {[
              { icon: "üí∞", value: "ROI 300%", label: "–í–æ–∑–≤—Ä–∞—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –∑–∞ 6 –º–µ—Å—è—Ü–µ–≤" },
              { icon: "‚è±Ô∏è", value: "3 —á–∞—Å–∞/–¥–µ–Ω—å", label: "–≠–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∫–∞–∂–¥–æ–≥–æ —é—Ä–∏—Å—Ç–∞" },
              { icon: "üìà", value: "+40%", label: "–†–æ—Å—Ç –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ—Ç–¥–µ–ª–∞" },
              { icon: "üîí", value: "100%", label: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö" }
            ].map((benefit, i) => (
              <div key={i} className="animate-scale opacity-0" style={{ animationDelay: `${i * 100}ms` }}>
                <div className="bg-white/10 backdrop-blur-lg rounded-2xl p-8 hover:bg-white/20 transition-all duration-300 text-center">
                  <div className="text-5xl mb-4">{benefit.icon}</div>
                  <div className="text-3xl font-bold mb-2">{benefit.value}</div>
                  <p className="text-white/80">{benefit.label}</p>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* –¢–∞—Ä–∏—Ñ—ã */}
 <section id="pricing" className="py-20 bg-gray-50">
  <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div className="animate-fade-up opacity-0" style={{ animationDelay: '0ms' }}>
      <h2 className="text-4xl font-bold text-center mb-4">–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ</h2>
      <p className="text-xl text-gray-600 text-center mb-12">–ù–∞—á–Ω–∏—Ç–µ —Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ –Ω–∞ 14 –¥–Ω–µ–π</p>
    </div>

    <div className="grid md:grid-cols-3 gap-8">
      {[
        {
          name: "–°—Ç–∞—Ä—Ç–æ–≤—ã–π",
          //price: "–¶–µ–Ω–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É",
          features: ["–î–æ 5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "100 –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤", "–ë–∞–∑–æ–≤—ã–π –ø–æ–∏—Å–∫", "Email –ø–æ–¥–¥–µ—Ä–∂–∫–∞", "–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞"],
          popular: false,
          buttonText: "–ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ"
        },
        {
          name: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π",
          //price: "–¶–µ–Ω–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É",
          features: ["–î–æ 20 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "1000 –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤", "–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π AI-–ø–æ–∏—Å–∫", "API –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π", "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7", "–û–±—É—á–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"],
          popular: true,
          buttonText: "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å 14 –¥–Ω–µ–π"
        },
        {
          name: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π",
          //price: "–¶–µ–Ω–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É",
          features: ["–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤", "–í—ã–¥–µ–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä", "–ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è", "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä", "SLA –≥–∞—Ä–∞–Ω—Ç–∏–∏"],
          popular: false,
          buttonText: "–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—á–µ—Ç"
        }
      ].map((plan, i) => (
        <div key={i} className="animate-fade-up opacity-0" style={{ animationDelay: `${i * 200}ms` }}>
          <div className={`relative rounded-2xl p-8 ${
            plan.popular 
              ? 'bg-gradient-to-br from-blue-600 to-purple-600 text-white shadow-2xl transform scale-105' 
              : 'bg-white border border-gray-200'
          }`}>
            {plan.popular && (
              <div className="absolute -top-4 left-1/2 transform -translate-x-1/2 bg-yellow-400 text-gray-900 px-4 py-1 rounded-full text-sm font-semibold">
                –ü–æ–ø—É–ª—è—Ä–Ω—ã–π
              </div>
            )}
            <h3 className="text-2xl font-bold mb-4">{plan.name}</h3>
            <div className="mb-6">
              <span className="text-4xl font-bold">{plan.price}</span>
              {plan.price !== "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ" && <span className="text-lg"> ‚ÇΩ/–º–µ—Å</span>}
            </div>
            <ul className="space-y-3 mb-8">
              {plan.features.map((feature, j) => (
                <li key={j} className="flex items-start space-x-3">
                  <Check className={`w-5 h-5 flex-shrink-0 mt-0.5 ${plan.popular ? 'text-white' : 'text-green-500'}`} />
                  <span className={plan.popular ? 'text-white' : 'text-gray-700'}>{feature}</span>
                </li>
              ))}
            </ul>
            <button 
              onClick={() => setShowDemoForm(true)}
              className={`w-full py-3 rounded-full font-semibold transition-all duration-300 ${
                plan.popular
                  ? 'bg-white text-blue-600 hover:bg-gray-100'
                  : 'bg-gradient-to-r from-blue-600 to-purple-600 text-white hover:shadow-lg'
              }`}
            >
              {plan.buttonText}
            </button>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

      {/* CTA —Å–µ–∫—Ü–∏—è */}
      <section id="demo" className="py-20 bg-gradient-to-r from-blue-600 to-purple-600">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <div className="animate-fade-up opacity-0" style={{ animationDelay: '0ms' }}>
            <h2 className="text-4xl font-bold text-white mb-6">
              –£—Å–∫–æ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–¥–µ–ª–∞ –≤ 3 —Ä–∞–∑–∞
            </h2>
            <p className="text-xl text-white/90 mb-8">
              –ù–∞—á–Ω–∏—Ç–µ —ç–∫–æ–Ω–æ–º–∏—Ç—å –¥–æ 3 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å –Ω–∞ –ø–æ–∏—Å–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <button className="px-8 py-4 bg-white text-blue-600 rounded-full hover:bg-gray-100 font-semibold transition-all duration-300 transform hover:-translate-y-1"
              onClick={() => setShowDemoForm(true)}>
                –ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥
              </button>
              <button className="px-8 py-4 border-2 border-white text-white rounded-full hover:bg-white/10 font-semibold transition-all duration-300"
                      onClick={() => setShowDemoForm(true)}>
                –ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–µ–º–æ
              </button>
            </div>
          </div>
        </div>
      </section>

      {/* –§—É—Ç–µ—Ä */}
      <footer className="bg-gray-900 text-gray-400 py-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid md:grid-cols-4 gap-8">
            <div>
              <div className="flex items-center space-x-2 mb-4">
                <div className="w-10 h-10 bg-gradient-to-br from-blue-600 to-purple-600 rounded-lg flex items-center justify-center">
                  <Sparkles className="w-6 h-6 text-white" />
                </div>
                <span className="text-2xl font-bold text-white">Athena</span>
              </div>
              <p className="text-sm">–†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è AI-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –æ—Ç–¥–µ–ª–æ–≤</p>
            </div>
            <div>
              <h4 className="text-white font-semibold mb-4">–ü—Ä–æ–¥—É–∫—Ç</h4>
              <ul className="space-y-2 text-sm">
                <li><a href="#" className="hover:text-white transition-colors">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</a></li>
                <li><a href="#" className="hover:text-white transition-colors">–¢–∞—Ä–∏—Ñ—ã</a></li>
                <li><a href="#" className="hover:text-white transition-colors">API</a></li>
                <li><a href="#" className="hover:text-white transition-colors">–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏</a></li>
              </ul>
            </div>
            <div>
              <h4 className="text-white font-semibold mb-4">–ö–æ–º–ø–∞–Ω–∏—è</h4>
              <ul className="space-y-2 text-sm">
                <li><a href="#" className="hover:text-white transition-colors">–û –Ω–∞—Å</a></li>
                <li><a href="#" className="hover:text-white transition-colors">–ë–ª–æ–≥</a></li>
                <li><a href="#" className="hover:text-white transition-colors">–ö–∞—Ä—å–µ—Ä–∞</a></li>
                <li><a href="#" className="hover:text-white transition-colors">–ö–æ–Ω—Ç–∞–∫—Ç—ã</a></li>
              </ul>
            </div>
            <div>
              <h4 className="text-white font-semibold mb-4">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</h4>
              <ul className="space-y-2 text-sm">
                <li><a href="#" className="hover:text-white transition-colors">–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è</a></li>
                <li><a href="#" className="hover:text-white transition-colors">FAQ</a></li>
                <li><a href="#" className="hover:text-white transition-colors">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</a></li>
                <li><a href="#" className="hover:text-white transition-colors">–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã</a></li>
              </ul>
            </div>
          </div>
          <div className="border-t border-gray-800 mt-8 pt-8 text-center text-sm">
            <p>&copy; 2024 Athena. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
          </div>
        </div>
      </footer>

      {/* –†–µ–Ω–¥–µ—Ä–∏–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ */}
      <DemoFormModal showDemoForm={showDemoForm} setShowDemoForm={setShowDemoForm} />

      <style jsx global>{`
        @keyframes fade-up {
          to {
            opacity: 1;
            transform: translateY(0);
          }
        }
        
        @keyframes scale {
          to {
            opacity: 1;
            transform: scale(1);
          }
        }
        
        .animate-fade-up {
          transform: translateY(30px);
          animation: fade-up 1s ease-out forwards;
        }
        
        .animate-scale {
          transform: scale(0.9);
          animation: scale 1s ease-out forwards;
        }

        @keyframes blob {
          0% { transform: translate(0px, 0px) scale(1); }
          33% { transform: translate(30px, -50px) scale(1.1); }
          66% { transform: translate(-20px, 20px) scale(0.9); }
          100% { transform: translate(0px, 0px) scale(1); }
        }
        
        .animate-blob {
          animation: blob 7s infinite;
        }
        
        .animation-delay-2000 {
          animation-delay: 2s;
        }
        
        .animation-delay-4000 {
          animation-delay: 4s;
        }
      `}</style>
    </div>
  );
};

export default DevPlusWebsite;